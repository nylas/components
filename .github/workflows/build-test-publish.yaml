name: Build & Test
on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    types: [opened, synchronize]
env:
  API_GATEWAY: ${{secrets.API_GATEWAY}}
  CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
  PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install dependencies
        run: npm install
      - name: Build Components
        run: npm run build
      - name: Cache build
        uses: actions/cache@v2
        env:
          cache-name: cache-build
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Cache cypress
        uses: actions/cache@v2
        env:
          cache-name: cache-cypress
        id: cache-cypress
        with:
          path: /home/runner/.cache/Cypress/*
          key: ${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    needs: build
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Run linter
        run: npm run lint:ci

  type-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    needs: build
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Run type-check
        run: npm run tsc

  test-unit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    needs: build
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Run unit tests
        run: npm run test

  test-percy-snapshot:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    needs: build
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Run percy snapshots
        run: npm run snapshot

  test-cypress:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    needs: build
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/cache@v2
        id: restore-cypress
        with:
          path: /home/runner/.cache/Cypress/*
          key: ${{ github.sha }}
      - name: Run cypress tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: .
          record: true
          install: false # disable npm install because we are already running it in previous step
          start: npm run start:ci
          wait-on: http://localhost:8000
          wait-on-timeout: 30

  publish:
    needs: [build, lint, test-unit, type-check, test-cypress]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # This is how we have to set the NPM_TOKEN because the `actions/setup-node@v1` requires it.
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set node version
        uses: actions/setup-node@v1
        with:
          node-version: 14.16.0
          registry-url: https://registry.npmjs.org/

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Configure Git CI User
        run: |
          npm config set access public
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      - name: Publish (canary)
        if: contains(github.ref, 'canary') == true
        run: |
          npm run lerna -- changed && npm run lerna -- publish from-git --no-git-reset --no-verify-access --dist-tag canary --canary --preid canary --yes

      - name: Publish (stable)
        if: contains(github.ref, 'canary') == false
        run: |
          npm run lerna -- changed && npm run lerna -- publish from-git --no-git-reset --no-verify-access --yes
